/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <150>;
};
&lt {
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <150>;
};
&sk {
    release-after-ms = <2000>;
    quick-release;
};
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  W  |  F  |  M  |  G  |  Z  |   |  /  |  .   |  Q  |  '  |  -  |   =  |
// | BSPC |  R  |  S  |  N  |  D  |  B  |   |  ,  |  A   |  E  |  I  |  H  |  J   |
// |  MO3 |  X  |  C  |  L  |  P  |  V  |   |  ;  |  U   |  O  |  Y  |  K  |   `  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp W &kp F &kp M &kp G &kp Z   &kp FSLH &kp DOT  &kp Q     &kp SQT   &kp MINUS    &kp EQUAL
   &kp BSPC &mt LGUI R &mt LALT S &mt LSHFT N &mt LCTRL D &kp B   &kp COMMA &mt RCTRL A  &mt RSHFT E     &mt ALT I   &mt RGUI H &kp J
   &kp ENTER &kp X &kp C &kp L &kp P &kp V   &kp SEMI &kp U  &kp O &kp Y &kp K &to 4
                  &lt 1 TAB &kp SPACE &mo 2   &sk LSHFT &kp T &lt 3 GRAVE
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans   &kp INS    &kp HOME       &kp UP       &kp END       &kp PG_UP         &mkp MB3 &mkp MB1 &mmv MOVE_UP  &mkp MB2 &msc SCRL_UP &kp C_VOL_UP
   &trans   &kp DEL    &kp LEFT     &kp DOWN &kp RIGHT &kp PG_DN   &mkp MB4  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT &msc SCRL_DOWN &kp C_VOL_DN
   &trans   &kp CAPS       &kp PRINTSCREEN       &kp K_APP       &trans       &trans         &mkp MB5 &msc SCRL_LEFT  &mkp MB5 &msc SCRL_RIGHT &mkp MB1 &kp C_PLAY_PAUSE
                                    &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp EXCL &kp AT   &kp HASH   &kp DOLLAR &kp PERCENT     &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp MINUS
   &trans &kp N1     &kp N2     &kp N3     &kp N4     &kp N5    &kp N6     &kp N7     &kp N8     &kp N9     &kp N0 &kp EQUAL
   &trans &kp N0     &kp N9     &kp N8     &kp N7     &kp N6   &kp LEFT_BRACKET &kp RIGHT_BRACKET  &kp COMMA &kp DOT &kp SLASH &kp BSLH
                             &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
                function_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6
   &trans &out OUT_TOG     &bootloader      &bt BT_CLR    &kp N4     &kp N5    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &trans &kp N0     &kp N9     &kp N8     &kp N7     &kp N6    &mkp MB5 &msc SCRL_LEFT  &mkp MB5 &msc SCRL_RIGHT &kp RPAR &kp BSPC
                             &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
 
                qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  W  |  F  |  M  |  G  |  Z  |   |  /  |  .   |  Q  |  '  |  -  |   =  |
// | BSPC |  R  |  S  |  N  |  D  |  B  |   |  ,  |  A   |  E  |  I  |  H  |  J   |
// |  MO3 |  X  |  C  |  L  |  P  |  V  |   |  ;  |  U   |  O  |  Y  |  K  |   `  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp MINUS
   &kp BSPC &mt LCTRL A &mt LGUI S &mt LALT D &mt LSHFT F &kp G   &kp H &mt RSHFT J  &mt RALT K     &mt RGUI L   &mt RCTRL SEMI &kp SQT
   &kp ENTER &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp SLASH &to 0
                  &lt 1 TAB &kp SPACE &mo 2   &sk LSHFT &kp T &lt 3 GRAVE
                        >;
                };
        };
};
